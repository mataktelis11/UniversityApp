@model UniversityApp.Models.Student

@{
    ViewData["Title"] = "Details";

    int currentSemester = Int32.Parse(ViewData["CurrentSemester"].ToString());
    string semesterTag = "";
    var courses = Model.CourseHasStudents;

    // semester
    if (currentSemester == 0)
    {
        semesterTag = "All semesters";      
    }    
    else
    {
        semesterTag = "Semester " + currentSemester;
        courses = courses.Where(c => c.Course.Semester == currentSemester).ToList();
    }

    // sorting
    courses = courses.OrderBy(c => c.Course.Title).ToList();

    string currentSortOrder = ViewData["CurrentSortOrder"].ToString();

    switch (currentSortOrder)
    {
        case "title":
            courses = courses.OrderBy(c => c.Course.Title).ToList();
            break;

        case "title_desc":
            courses = courses.OrderByDescending(c => c.Course.Title).ToList();
            break;

        case "semester":
            courses = courses.OrderBy(c => c.Course.Semester).ToList();
            break;

        case "semester_desc":
            courses = courses.OrderByDescending(c => c.Course.Semester).ToList();
            break;

        case "grade":
            courses = courses.OrderBy(c => c.Grade).ToList();
            break;

        case "grade_desc":
            courses = courses.OrderByDescending(c => c.Grade).ToList();
            break;
    }


}

<h1><button type="button" class="btn btn-success" onclick="location.href='@Url.Action("UniversityStudents", "Secretaries")'"><i class="bi bi-backspace-fill"></i> Go back to the list</button> Student @Html.DisplayFor(model => model.Name)</h1>

<div class="row row-cols-1 row-cols-md-3 g-4">
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Personal Details</h5>
                <table class="table">
                    <tbody>
                        <tr>
                            <th scope="row">@Html.DisplayNameFor(model => model.Name)</th>
                            <td>@Html.DisplayFor(model => model.Name)</td>
                        </tr>
                        <tr>
                            <th scope="row">@Html.DisplayNameFor(model => model.Surname)</th>
                            <td>@Html.DisplayFor(model => model.Surname)</td>
                        </tr>
                        <tr>
                            <th scope="row">@Html.DisplayNameFor(model => model.RegistrationNumber)</th>
                            <td>@Html.DisplayFor(model => model.RegistrationNumber)</td>
                        </tr>
                        <tr>
                            <th scope="row">@Html.DisplayNameFor(model => model.Department)</th>
                            <td>@Html.DisplayFor(model => model.Department)</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Total E.T.Cs</h5>
                <h2>@ViewData["etcs"]</h2>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Number of Registered Courses</h5>
                <h2>@ViewData["registered"]</h2>
            </div>
        </div>
    </div>
</div>

<hr />

<h1>Registered Courses 
    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("StudentAssignCourses", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId }))'">
        <i class="bi bi-plus-circle-fill"></i> Assign new Course(s) to this Student
    </button>
</h1>

@if (Model.CourseHasStudents.Count == 0)
{
    <div class="text-center">
        <figure class="figure">
            <img src="~/images/empty3.png" width="60%" class="figure-img img-fluid rounded" alt="A generic square placeholder image with rounded corners in a figure.">
            <figcaption class="figure-caption text-center">There are no Courses registered for this Student...</figcaption>
        </figure>
    </div>
}
else
{

    <div>
        Choose semester:
        <div class="btn-group">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                @semesterTag
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                <li><a class="dropdown-item" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=0, sortOrder=@ViewData["CurrentSortOrder"]}))'">All semesters</a></li>
                <li><a class="dropdown-item" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=1, sortOrder=@ViewData["CurrentSortOrder"]}))'">Semester 1</a></li>
                <li><a class="dropdown-item" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=2, sortOrder=@ViewData["CurrentSortOrder"]}))'">Semester 2</a></li>
                <li><a class="dropdown-item" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=3, sortOrder=@ViewData["CurrentSortOrder"]}))'">Semester 3</a></li>
                <li><a class="dropdown-item" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=4, sortOrder=@ViewData["CurrentSortOrder"]}))'">Semester 4</a></li>
                <li><a class="dropdown-item" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=5, sortOrder=@ViewData["CurrentSortOrder"]}))'">Semester 5</a></li>
                <li><a class="dropdown-item" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=6, sortOrder=@ViewData["CurrentSortOrder"]}))'">Semester 6</a></li>
                <li><a class="dropdown-item" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=7, sortOrder=@ViewData["CurrentSortOrder"]}))'">Semester 7</a></li>
                <li><a class="dropdown-item" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=8, sortOrder=@ViewData["CurrentSortOrder"]}))'">Semester 8</a></li>
            </ul>
        </div>
    </div>

    @if (courses.Count == 0)
    {
        <div class="text-center">
            <figure class="figure">
                <img src="~/images/empty3.png" width="60%" class="figure-img img-fluid rounded" alt="A generic square placeholder image with rounded corners in a figure.">
                <figcaption class="figure-caption text-center">There are no Courses registered for this Semester...</figcaption>
            </figure>
        </div>
    }
    else
    {

        <table class="table">
            <tr>
                <th>
                    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=@ViewData["CurrentSemester"], sortOrder=@ViewData["TitleSortParam"]}))'">
                        Course Title
                        @if (@ViewData["CurrentSortOrder"].Equals("title"))
                        {
                            <i class="bi bi-sort-down-alt"></i>
                        }
                        else if (@ViewData["CurrentSortOrder"].Equals("title_desc"))
                        {
                            <i class="bi bi-sort-down"></i>
                        }
                        else
                        {
                            <i class="bi bi-arrow-down-up"></i>
                        }

                    </button>
                </th>
                <th>
                    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=@ViewData["CurrentSemester"], sortOrder=@ViewData["SemesterSortParam"]}))'">
                        Semester
                        @if (@ViewData["CurrentSortOrder"].Equals("semester"))
                        {
                            <i class="bi bi-sort-down-alt"></i>
                        }
                        else if (@ViewData["CurrentSortOrder"].Equals("semester_desc"))
                        {
                            <i class="bi bi-sort-down"></i>
                        }
                        else
                        {
                            <i class="bi bi-arrow-down-up"></i>
                        }
                    </button>
                </th>
                <th>
                    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new RouteValueDictionary(new { id=Model.StudentId, semester=@ViewData["CurrentSemester"], sortOrder=@ViewData["GradeSortParam"]}))'">
                        Grade
                        @if (@ViewData["CurrentSortOrder"].Equals("grade"))
                        {
                            <i class="bi bi-sort-down-alt"></i>
                        }
                        else if (@ViewData["CurrentSortOrder"].Equals("grade_desc"))
                        {
                            <i class="bi bi-sort-down"></i>
                        }
                        else
                        {
                            <i class="bi bi-arrow-down-up"></i>
                        }
                    </button>
                </th>
            </tr>

            @foreach (var item in courses)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Course.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Course.Semester)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Grade)
                    </td>
                </tr>
            }
        </table>
    }

}


