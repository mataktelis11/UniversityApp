@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model X.PagedList.IPagedList<UniversityApp.Models.Student>

@{
    ViewData["Title"] = "University Students";

    var btnText = "";

    switch (ViewData["searchParam"])
    {
        case "name":
            btnText = "Search by Name";
            break;

        case "surname":
            btnText = "Search by Surname";
            break;

        case "dept":
            btnText = "Search by Department";
            break;

        case "reg":
            btnText = "Search by Registration Number";
            break;

        default:
            btnText = "Search by Name";
            break;
    }

}

<h1><i class="bi bi-mortarboard"></i> University Students</h1>
<p>Here you can see all the Students tha are registered to the Univerisity's Database. You can use the Register a new student by clicking the button 'Add a new Student'.</p>
<p>Also, you can click a Studen's button to see his page and assign a Course for him/her. </p>


<div>
    Page size:
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
            @ViewData["pageSize"]
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
            <li><a class="dropdown-item" asp-action="UniversityStudents" asp-route-pageSize=15 asp-route-page="@ViewData["Page"]" asp-route-sortOrder="@ViewData["CurrentSortOrder"]" asp-route-search="@ViewData["CurrentFilter"]" asp-route-searchParam="@ViewData["searchParam"]">15</a></li>
            <li><a class="dropdown-item" asp-action="UniversityStudents" asp-route-pageSize=25 asp-route-page="@ViewData["Page"]" asp-route-sortOrder="@ViewData["CurrentSortOrder"]" asp-route-search="@ViewData["CurrentFilter"]" asp-route-searchParam="@ViewData["searchParam"]">25</a></li>
            <li><a class="dropdown-item" asp-action="UniversityStudents" asp-route-pageSize=35 asp-route-page="@ViewData["Page"]" asp-route-sortOrder="@ViewData["CurrentSortOrder"]" asp-route-search="@ViewData["CurrentFilter"]" asp-route-searchParam="@ViewData["searchParam"]">35</a></li>
        </ul>
    </div>
</div>


<form asp-action="UniversityStudents" method="get">
    <div class="form-actions">
        <p>
@*            Find by name: <input type="text" name="search" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="search" class="btn btn-primary" />*@
            <div class="input-group mb-3">
                <button class="btn btn-info dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false" id="optionselect">@btnText</button>
              <ul class="dropdown-menu">
                    <li><a class="dropdown-item" id="option_name">Search by Name</a></li>
                    <li><a class="dropdown-item" id="option_surname">Search by Surame</a></li>
                    <li><a class="dropdown-item" id="option_dept">Search by Department</a></li>
                    <li><a class="dropdown-item" id="option_reg">Search by Registration Number</a></li>
              </ul>
              <input type="text" class="form-control" aria-label="Text input with dropdown button" value="@ViewData["CurrentFilter"]" name="search">
              <input type="submit" value="search" class="btn btn-primary" />
            </div>
            <input type="text" id="searchParamVar" value="@ViewData["searchParam"]" name="searchParam" hidden="">
            <input type="text" value="@ViewData["CurrentSortOrder"]" name="sortOrder" hidden="">
            <input type="text" value="@ViewData["pageSize"]" name="pageSize" hidden="">
        </p>
    </div>
</form>

<p>
    <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("CreateStudent", "Secretaries")'"><i class="bi bi-plus-circle-fill"></i> Add a new Student</button>
</p>
<table class="table">
    <thead>
        <tr class="table-secondary">
            <th>
                <button type="button" class="btn btn-warning" onclick="location.href='@Url.Action("UniversityStudents", "Secretaries", new RouteValueDictionary(new { page=@ViewData["Page"], pageSize=@ViewData["pageSize"], sortOrder=@ViewData["RegSortParm"], search=@ViewData["CurrentFilter"], searchParam=@ViewData["searchParam"]}))'">
                    Registration Number 
                    @if (@ViewData["CurrentSortOrder"].Equals("reg"))
                    {
                        <i class="bi bi-sort-down-alt"></i>
                    }
                    else if (@ViewData["CurrentSortOrder"].Equals("reg_desc"))
                    {                       
                        <i class="bi bi-sort-down"></i>
                    }
                    else
                    {
                        <i class="bi bi-arrow-down-up"></i>
                    }
                </button>               
            </th>
            <th>
                <button type="button" class="btn btn-warning" onclick="location.href='@Url.Action("UniversityStudents", "Secretaries", new RouteValueDictionary(new { page=@ViewData["Page"], pageSize=@ViewData["pageSize"], sortOrder=@ViewData["NameSortParm"], search=@ViewData["CurrentFilter"], searchParam=@ViewData["searchParam"]}))'">
                    Name
                    @if (@ViewData["CurrentSortOrder"].Equals("name"))
                    {
                        <i class="bi bi-sort-down-alt"></i>
                    }
                    else if (@ViewData["CurrentSortOrder"].Equals("name_desc"))
                    {
                        <i class="bi bi-sort-down"></i>
                    }
                    else
                    {
                        <i class="bi bi-arrow-down-up"></i>
                    }
                </button>
            </th>
            <th>
                <button type="button" class="btn btn-warning" onclick="location.href='@Url.Action("UniversityStudents", "Secretaries", new RouteValueDictionary(new { page=@ViewData["Page"], pageSize=@ViewData["pageSize"], sortOrder=@ViewData["SurnameSortParm"], search=@ViewData["CurrentFilter"], searchParam=@ViewData["searchParam"]}))'">
                    Surname
                    @if (@ViewData["CurrentSortOrder"].Equals("surname"))
                    {
                        <i class="bi bi-sort-down-alt"></i>
                    }
                    else if (@ViewData["CurrentSortOrder"].Equals("surname_desc"))
                    {
                        <i class="bi bi-sort-down"></i>
                    }
                    else
                    {
                        <i class="bi bi-arrow-down-up"></i>
                    }
                </button>
            </th>
            <th>
                <button type="button" class="btn btn-warning" onclick="location.href='@Url.Action("UniversityStudents", "Secretaries", new RouteValueDictionary(new { page=@ViewData["Page"], pageSize=@ViewData["pageSize"], sortOrder=@ViewData["DeptSortParm"], search=@ViewData["CurrentFilter"], searchParam=@ViewData["searchParam"]}))'" ">
                    Department 
                    @if (@ViewData["CurrentSortOrder"].Equals("dept"))
                    {
                        <i class="bi bi-sort-down-alt"></i>
                    }
                    else if (@ViewData["CurrentSortOrder"].Equals("dept_desc"))
                    {                       
                        <i class="bi bi-sort-down"></i>
                    }
                    else
                    {
                        <i class="bi bi-arrow-down-up"></i>
                    }
                </button>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr class="table-secondary">
                <td>
                    @Html.DisplayFor(modelItem => item.RegistrationNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Surname)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    <button type="button" class="btn btn-info" onclick="location.href='@Url.Action("StudentDetails", "Secretaries", new { @id = item.StudentId })'">More Details</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- output a paging control that lets the user navigation to the previous page, next page, etc -->
<nav>
    @Html.PagedListPager(Model, page => Url.Action("UniversityStudents", new { page = page, pageSize=ViewData["pageSize"],  search=ViewData["CurrentFilter"], searchParam=ViewData["searchParam"], sortOrder=ViewData["CurrentSortOrder"] }), new PagedListRenderOptions()
{
    ActiveLiElementClass = "active",
    PageClasses = new[]{ "page-link"},
    LiElementClasses=new[] { "page-item" },
    UlElementClasses = new[] { "pagination","justify-content-center", "mt-3" },
    LinkToNextPageFormat = "Next",
    LinkToPreviousPageFormat = "Previous",
    MaximumPageNumbersToDisplay = 5,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    
})
</nav>


@*                    <li><a class="dropdown-item" id="option_name">Search by Name</a></li>
                    <li><a class="dropdown-item" id="option_surname">Search by Surame</a></li>
                    <li><a class="dropdown-item" id="option_dept">Search by Department</a></li>
                    <li><a class="dropdown-item" id="option_reg">Search by Registration Number</a></li>*@

<script>

    var optionselect = document.getElementById("optionselect");

    var option_name = document.getElementById("option_name");
    var option_surname = document.getElementById("option_surname");
    var option_dept = document.getElementById("option_dept");
    var option_reg = document.getElementById("option_reg");

    var input_searchParamVar = document.getElementById("searchParamVar");

    option_name.addEventListener("click", () => { myFunction("name", "Search by Name") });
    option_surname.addEventListener("click", () => { myFunction("surname", "Search by Surame") });
    option_dept.addEventListener("click", () => { myFunction("dept", "Search by Department") });
    option_reg.addEventListener("click", () => { myFunction("reg", "Search by Registration Number") });

    function myFunction(param, text) {
        input_searchParamVar.value = param
        optionselect.innerText = text
    }
</script>