@model UniversityApp.Models.Professor

@{
    ViewData["Title"] = "Professor Details";

    int availableCoursesCount = Int32.Parse(ViewData["availableCoursesCount"].ToString());

    var currentSortOrder = ViewData["CurrentSortOrder"].ToString();

    var currentCourses = Model.Courses;

    switch (currentSortOrder)
    {
        case "title":
            currentCourses = currentCourses.OrderBy(c => c.Title).ToList();
            break;

        case "title_desc":
            currentCourses = currentCourses.OrderByDescending(c => c.Title).ToList();
            break;

        case "semester":
            currentCourses = currentCourses.OrderBy(c => c.Semester).ToList();
            break;

        case "semester_desc":
            currentCourses = currentCourses.OrderByDescending(c => c.Semester).ToList();
            break;
    }
}

<h1><button type="button" class="btn btn-success" onclick="location.href='@Url.Action("UniversityProfessors", "Secretaries")'"><i class="bi bi-backspace-fill"></i> Go back to the list</button> Professor @Html.DisplayFor(model => model.Name)</h1>

<div class="row row-cols-1 row-cols-md-3 g-4">
    <div class="col">
        <div class="card text-white bg-secondary mb-3">
            <div class="card-body">
                <h5 class="card-title">Personal Details</h5>
                <table class="table border-white">
                    <tbody>
                        <tr>
                            <th scope="row">@Html.DisplayNameFor(model => model.Name)</th>
                            <td>@Html.DisplayFor(model => model.Name)</td>
                        </tr>
                        <tr>
                            <th scope="row">@Html.DisplayNameFor(model => model.Surname)</th>
                            <td>@Html.DisplayFor(model => model.Surname)</td>
                        </tr>
                        <tr>
                            <th scope="row">@Html.DisplayNameFor(model => model.Afm)</th>
                            <td>@Html.DisplayFor(model => model.Afm)</td>
                        </tr>
                        <tr>
                            <th scope="row">@Html.DisplayNameFor(model => model.Department)</th>
                            <td>@Html.DisplayFor(model => model.Department)</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="card text-white bg-secondary mb-3">
            <div class="card-body">
                <h5 class="card-title">Number of Registered Courses</h5>
                <h2>@ViewData["registeredCourses"]</h2>
            </div>
        </div>
    </div>
</div>

<hr />

<h1>Assigned Courses    <button type="button" class="btn btn-success" id="btnopen"><i class="bi bi-plus-circle-fill"></i> Assign a Course to this Professor</button></h1>


@if (currentCourses.Count == 0)
{
    <div class="text-center">
        <figure class="figure">
            <img src="~/images/empty3.png" width="60%" class="figure-img img-fluid rounded" alt="A generic square placeholder image with rounded corners in a figure.">
            <figcaption class="figure-caption text-center">There are no Courses registered to this Professor currently.</figcaption>
        </figure>
    </div>
}
else
{

    <br />

    <div class="row justify-content-center">

    <table class="table table-striped table-hover table-bordered table-dark w-75">
            <thead class="table-secondary">
            <tr>
                <th>
                    <button type="button" class="btn btn-dark" onclick="location.href='@Url.Action("ProfessorDetails", "Secretaries", new RouteValueDictionary(new { id=Model.ProfessorId, sortOrder=@ViewData["TitleSortParam"]}))'">
                        Course Title
                        @if (@ViewData["CurrentSortOrder"].Equals("title"))
                        {
                            <i class="bi bi-sort-down-alt"></i>
                        }
                        else if (@ViewData["CurrentSortOrder"].Equals("title_desc"))
                        {
                            <i class="bi bi-sort-down"></i>
                        }
                        else
                        {
                            <i class="bi bi-arrow-down-up"></i>
                        }
                    </button>
                </th>
                <th>
                    <button type="button" class="btn btn-dark" onclick="location.href='@Url.Action("ProfessorDetails", "Secretaries", new RouteValueDictionary(new { id=Model.ProfessorId, sortOrder=@ViewData["SemesterSortParam"]}))'">
                        Semester
                        @if (@ViewData["CurrentSortOrder"].Equals("semester"))
                        {
                            <i class="bi bi-sort-down-alt"></i>
                        }
                        else if (@ViewData["CurrentSortOrder"].Equals("semester_desc"))
                        {
                            <i class="bi bi-sort-down"></i>
                        }
                        else
                        {
                            <i class="bi bi-arrow-down-up"></i>
                        }
                    </button>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in currentCourses)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Semester)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    </div>
}




<!-- Modal -->
<div class="modal fade" id="formModalCenter" tabindex="-1" role="dialog" aria-labelledby="formModalCenterTitle" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered" role="document">
    <div class="modal-content">
      <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Assign a Course</h5>
                <button type="button" class="btn-close" aria-label="Close" id="btnclose">
        </button>
      </div>
      <div class="modal-body">
            @if (availableCoursesCount > 0)
            {
                <p>Choose a Course to assign for this Professor. The list contains the available Courses in the following format:</p>
                <p>&#60;Course Title&#62; - &#60;Course Semester&#62;</p>
                <form asp-action="AssignProfessorCourse" id="fromAssignProf">
                    <div class="form-group">
                        <select class="form-control" asp-items="ViewBag.availableCourses" name="courseid"></select>
                    </div>
                    <input type="number" name="professorid" value="@Model.ProfessorId" hidden="">
                </form>
            }
            else
            {
                <div class="text-center">
                    <figure class="figure">
                        <img src="~/images/empty44.png" width="20%" class="figure-img img-fluid rounded" alt="A generic square placeholder image with rounded corners in a figure."/>   
                        <p>There are no availabe courses to assign...</p>
                    </figure>
                </div> 
            }
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" id="btnclose2">Close</button>
        <button type="button" class="btn btn-primary" id="btnsave">Save</button>
      </div>
    </div>
  </div>
</div>

<script>
    var btnopen = document.getElementById("btnopen");
    var btnclose = document.getElementById("btnclose");
    var btnclose2 = document.getElementById("btnclose2");
    var btnsave = document.getElementById("btnsave");

    btnopen.onclick = function () {
        $('#formModalCenter').modal('show');
    }

    btnclose.onclick = function () {
        $('#formModalCenter').modal('hide');
    }

    btnclose2.onclick = function () {
        $('#formModalCenter').modal('hide');
    }

    btnsave.onclick = function () {
        document.getElementById("fromAssignProf").submit();
    }
</script>
