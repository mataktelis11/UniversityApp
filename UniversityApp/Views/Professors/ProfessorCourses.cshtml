@model IEnumerable<UniversityApp.Models.Course>

@{
    ViewData["Title"] = "My Courses";
}

<h2>My Courses</h2>

@if (Model.Count() == 0)
{
    <div class="text-center">
        <figure class="figure">
            <img src="~/images/empty3.png" width="60%" class="figure-img img-fluid rounded" alt="A generic square placeholder image with rounded corners in a figure.">
            <figcaption class="figure-caption text-center">There are no Courses registered to your Account...</figcaption>
        </figure>
    </div>
}
else
{
    <br />
    <div class="row justify-content-center">

    <table class="table table-striped table-hover table-bordered table-dark w-auto">
        <thead class="table-secondary">
            <tr>
                <th>
                    <button type="button" class="btn btn-dark" onclick="location.href='@Url.Action("ProfessorCourses", "Professors", new RouteValueDictionary(new { sortOrder=@ViewData["TitleSortParam"]}))'">
                        @Html.DisplayNameFor(model => model.Title)
                        @if (@ViewData["CurrentSortOrder"].Equals("title"))
                        {
                            <i class="bi bi-sort-down-alt"></i>
                        }
                        else if (@ViewData["CurrentSortOrder"].Equals("title_desc"))
                        {
                            <i class="bi bi-sort-down"></i>
                        }
                        else
                        {
                            <i class="bi bi-arrow-down-up"></i>
                        }
                    </button>
                </th>
                <th>
                    <button type="button" class="btn btn-dark" onclick="location.href='@Url.Action("ProfessorCourses", "Professors", new RouteValueDictionary(new { sortOrder=@ViewData["SemesterSortParam"]}))'">
                        @Html.DisplayNameFor(model => model.Semester)
                        @if (@ViewData["CurrentSortOrder"].Equals("semester"))
                        {
                            <i class="bi bi-sort-down-alt"></i>
                        }
                        else if (@ViewData["CurrentSortOrder"].Equals("semester_desc"))
                        {
                            <i class="bi bi-sort-down"></i>
                        }
                        else
                        {
                            <i class="bi bi-arrow-down-up"></i>
                        }
                    </button>
                </th>
                <th>
                    <button type="button" class="btn btn-dark" onclick="location.href='@Url.Action("ProfessorCourses", "Professors", new RouteValueDictionary(new { sortOrder=@ViewData["StudentsSortParam"]}))'">
                        Number of Non-Graded Students
                        @if (@ViewData["CurrentSortOrder"].Equals("students"))
                        {
                            <i class="bi bi-sort-down-alt"></i>
                        }
                        else if (@ViewData["CurrentSortOrder"].Equals("students_desc"))
                        {
                            <i class="bi bi-sort-down"></i>
                        }
                        else
                        {
                            <i class="bi bi-arrow-down-up"></i>
                        }
                    </button>
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                    <tr>
                        <td>
                        @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                        @Html.DisplayFor(modelItem => item.Semester)
                        </td>
                        <td>
                            @item.CourseHasStudents.Where(c => c.Grade == null).Count()
                        </td>
                        <td>
                            <button type="button" class="btn btn-success" onclick="location.href='@Url.Action("RegisteredStudents", "Professors",  new RouteValueDictionary(new { id=item.CourseId }))'">
                                Show Students &nbsp; <i class="bi bi-arrow-right-square-fill"></i>
                            </button>
                        </td>
                    </tr>
            }
        </tbody>
    </table>

    </div>
}


